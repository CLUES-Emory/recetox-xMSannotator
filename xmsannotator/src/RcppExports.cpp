// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// annotate_by_mass
DataFrame annotate_by_mass(DataFrame peak_table, DataFrame adduct_table, DataFrame compound_table, double tolerance);
RcppExport SEXP _xmsannotator_annotate_by_mass(SEXP peak_tableSEXP, SEXP adduct_tableSEXP, SEXP compound_tableSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type peak_table(peak_tableSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type adduct_table(adduct_tableSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type compound_table(compound_tableSEXP);
    Rcpp::traits::input_parameter< double >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(annotate_by_mass(peak_table, adduct_table, compound_table, tolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_xmsannotator_annotate_by_mass", (DL_FUNC) &_xmsannotator_annotate_by_mass, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_xmsannotator(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
